//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DslModeling = global::Microsoft.VisualStudio.Modeling;
using DslDesign = global::Microsoft.VisualStudio.Modeling.Design;
using DslDiagrams = global::Microsoft.VisualStudio.Modeling.Diagrams;
namespace ConfigurationSectionDesigner
{
	/// <summary>
	/// DomainModel ConfigurationSectionDesignerDomainModel
	/// Description for ConfigurationSectionDesigner.ConfigurationSectionDesigner
	/// </summary>
	[DslDesign::DisplayNameResource("ConfigurationSectionDesigner.ConfigurationSectionDesignerDomainModel.DisplayName", typeof(global::ConfigurationSectionDesigner.ConfigurationSectionDesignerDomainModel), "ConfigurationSectionDesigner.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("ConfigurationSectionDesigner.ConfigurationSectionDesignerDomainModel.Description", typeof(global::ConfigurationSectionDesigner.ConfigurationSectionDesignerDomainModel), "ConfigurationSectionDesigner.GeneratedCode.DomainModelResx")]
	[global::System.CLSCompliant(true)]
	[DslModeling::DependsOnDomainModel(typeof(global::Microsoft.VisualStudio.Modeling.CoreDomainModel))]
	[DslModeling::DependsOnDomainModel(typeof(global::Microsoft.VisualStudio.Modeling.Diagrams.CoreDesignSurfaceDomainModel))]
	[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1506:AvoidExcessiveClassCoupling", Justification = "Generated code.")]
	[DslModeling::DomainObjectId("5a49b528-9c4b-4130-9093-0fb5bdef29ee")]
	public partial class ConfigurationSectionDesignerDomainModel : DslModeling::DomainModel
	{
		#region Constructor, domain model Id
	
		/// <summary>
		/// ConfigurationSectionDesignerDomainModel domain model Id.
		/// </summary>
		public static readonly global::System.Guid DomainModelId = new global::System.Guid(0x5a49b528, 0x9c4b, 0x4130, 0x90, 0x93, 0x0f, 0xb5, 0xbd, 0xef, 0x29, 0xee);
	
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="store">Store containing the domain model.</param>
		public ConfigurationSectionDesignerDomainModel(DslModeling::Store store)
			: base(store, DomainModelId)
		{
			// Call the partial method to allow any required serialization setup to be done.
			this.InitializeSerialization(store);		
		}
		
	
		///<Summary>
		/// Defines a partial method that will be called from the constructor to
		/// allow any necessary serialization setup to be done.
		///</Summary>
		///<remarks>
		/// For a DSL created with the DSL Designer wizard, an implementation of this 
		/// method will be generated in the GeneratedCode\SerializationHelper.cs class.
		///</remarks>
		partial void InitializeSerialization(DslModeling::Store store);
	
	
		#endregion
		#region Domain model reflection
			
		/// <summary>
		/// Gets the list of generated domain model types (classes, rules, relationships).
		/// </summary>
		/// <returns>List of types.</returns>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1506:AvoidExcessiveClassCoupling", Justification = "Generated code.")]	
		protected sealed override global::System.Type[] GetGeneratedDomainModelTypes()
		{
			return new global::System.Type[]
			{
				typeof(ConfigurationSectionModel),
				typeof(ConfigurationElement),
				typeof(AttributeProperty),
				typeof(ConfigurationSection),
				typeof(ConfigurationElementCollection),
				typeof(ElementProperty),
				typeof(ConfigurationProperty),
				typeof(TypeDefinition),
				typeof(ExternalType),
				typeof(EnumeratedType),
				typeof(EnumerationLiteral),
				typeof(BaseConfigurationType),
				typeof(ConfigurationSectionGroup),
				typeof(ConfigurationSectionProperty),
				typeof(ConfigurationSectionGroupProperty),
				typeof(PropertyValidators),
				typeof(PropertyValidator),
				typeof(CallbackValidator),
				typeof(NumberValidator),
				typeof(IntegerValidator),
				typeof(LongValidator),
				typeof(PositiveTimeSpanValidator),
				typeof(TimeSpanValidator),
				typeof(RegexStringValidator),
				typeof(StringValidator),
				typeof(CustomTypeConverter),
				typeof(TypeBase),
				typeof(Attribute),
				typeof(AttributeParameter),
				typeof(Comment),
				typeof(ConfigurationElementHasAttributeProperties),
				typeof(ConfigurationElementCollectionHasItemType),
				typeof(ConfigurationElementHasElementProperties),
				typeof(ElementPropertyHasType),
				typeof(AttributePropertyHasPropertyType),
				typeof(ConfigurationSectionModelHasTypeDefinitions),
				typeof(EnumeratedTypeHasLiterals),
				typeof(ConfigurationSectionModelHasConfigurationElements),
				typeof(ConfigurationSectionGroupHasConfigurationSectionProperties),
				typeof(ConfigurationSectionPropertyHasConfigurationSection),
				typeof(ConfigurationSectionGroupHasConfigurationSectionGroupProperties),
				typeof(ConfigurationSectionGroupPropertyHasConfigurationSectionGroup),
				typeof(ConfigurationSectionModelHasPropertyValidators),
				typeof(PropertyValidatorsHasValidators),
				typeof(ConfigurationPropertyHasPropertyValidator),
				typeof(ConfigurationSectionModelHasCustomTypeConverters),
				typeof(ConfigurationPropertyReferencesCustomTypeConverter),
				typeof(CustomTypeConverterHasType),
				typeof(BaseConfigurationTypeHasBaseClass),
				typeof(AttributeHasParameters),
				typeof(ConfigurationPropertyHasAttributes),
				typeof(ConfigurationSectionModelHasComments),
				typeof(CommentsReferenceConfigurationItems),
				typeof(ConfigurationSectionDesignerDiagram),
				typeof(ConfigurationElementCollectionHasItemTypeConnector),
				typeof(ElementPropertyHasTypeConnector),
				typeof(ConfigurationSectionPropertyHasConfigurationSectionConnector),
				typeof(ConfigurationSectionGroupHasConfigurationSectionGroupPropertiesConnector),
				typeof(InheritanceConnector),
				typeof(CommentLink),
				typeof(CommentBoxShape),
				typeof(ConfigurationShape),
				typeof(ConfigurationSectionShape),
				typeof(ConfigurationElementCollectionShape),
				typeof(ConfigurationElementShape),
				typeof(ConfigurationSectionGroupShape),
				typeof(global::ConfigurationSectionDesigner.FixUpDiagram),
				typeof(global::ConfigurationSectionDesigner.DecoratorPropertyChanged),
				typeof(global::ConfigurationSectionDesigner.ConnectorRolePlayerChanged),
				typeof(global::ConfigurationSectionDesigner.CompartmentItemAddRule),
				typeof(global::ConfigurationSectionDesigner.CompartmentItemDeleteRule),
				typeof(global::ConfigurationSectionDesigner.CompartmentItemRolePlayerChangeRule),
				typeof(global::ConfigurationSectionDesigner.CompartmentItemRolePlayerPositionChangeRule),
				typeof(global::ConfigurationSectionDesigner.CompartmentItemChangeRule),
			};
		}
		/// <summary>
		/// Gets the list of generated domain properties.
		/// </summary>
		/// <returns>List of property data.</returns>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1506:AvoidExcessiveClassCoupling", Justification = "Generated code.")]	
		protected sealed override DomainMemberInfo[] GetGeneratedDomainProperties()
		{
			return new DomainMemberInfo[]
			{
				new DomainMemberInfo(typeof(ConfigurationSectionModel), "Namespace", ConfigurationSectionModel.NamespaceDomainPropertyId, typeof(ConfigurationSectionModel.NamespacePropertyHandler)),
				new DomainMemberInfo(typeof(ConfigurationSectionModel), "XmlSchemaNamespace", ConfigurationSectionModel.XmlSchemaNamespaceDomainPropertyId, typeof(ConfigurationSectionModel.XmlSchemaNamespacePropertyHandler)),
				new DomainMemberInfo(typeof(ConfigurationElement), "Documentation", ConfigurationElement.DocumentationDomainPropertyId, typeof(ConfigurationElement.DocumentationPropertyHandler)),
				new DomainMemberInfo(typeof(ConfigurationElement), "HasCustomChildElements", ConfigurationElement.HasCustomChildElementsDomainPropertyId, typeof(ConfigurationElement.HasCustomChildElementsPropertyHandler)),
				new DomainMemberInfo(typeof(ConfigurationElement), "IsReadOnly", ConfigurationElement.IsReadOnlyDomainPropertyId, typeof(ConfigurationElement.IsReadOnlyPropertyHandler)),
				new DomainMemberInfo(typeof(ConfigurationElement), "DisplayName", ConfigurationElement.DisplayNameDomainPropertyId, typeof(ConfigurationElement.DisplayNamePropertyHandler)),
				new DomainMemberInfo(typeof(AttributeProperty), "DefaultValue", AttributeProperty.DefaultValueDomainPropertyId, typeof(AttributeProperty.DefaultValuePropertyHandler)),
				new DomainMemberInfo(typeof(AttributeProperty), "CustomEditor", AttributeProperty.CustomEditorDomainPropertyId, typeof(AttributeProperty.CustomEditorPropertyHandler)),
				new DomainMemberInfo(typeof(ConfigurationSection), "CodeGenOptions", ConfigurationSection.CodeGenOptionsDomainPropertyId, typeof(ConfigurationSection.CodeGenOptionsPropertyHandler)),
				new DomainMemberInfo(typeof(ConfigurationSection), "XmlSectionName", ConfigurationSection.XmlSectionNameDomainPropertyId, typeof(ConfigurationSection.XmlSectionNamePropertyHandler)),
				new DomainMemberInfo(typeof(ConfigurationSection), "ProtectionProvider", ConfigurationSection.ProtectionProviderDomainPropertyId, typeof(ConfigurationSection.ProtectionProviderPropertyHandler)),
				new DomainMemberInfo(typeof(ConfigurationSection), "CustomProtectionProvider", ConfigurationSection.CustomProtectionProviderDomainPropertyId, typeof(ConfigurationSection.CustomProtectionProviderPropertyHandler)),
				new DomainMemberInfo(typeof(ConfigurationElementCollection), "CollectionType", ConfigurationElementCollection.CollectionTypeDomainPropertyId, typeof(ConfigurationElementCollection.CollectionTypePropertyHandler)),
				new DomainMemberInfo(typeof(ConfigurationElementCollection), "XmlItemName", ConfigurationElementCollection.XmlItemNameDomainPropertyId, typeof(ConfigurationElementCollection.XmlItemNamePropertyHandler)),
				new DomainMemberInfo(typeof(ConfigurationElementCollection), "CodeGenOptions", ConfigurationElementCollection.CodeGenOptionsDomainPropertyId, typeof(ConfigurationElementCollection.CodeGenOptionsPropertyHandler)),
				new DomainMemberInfo(typeof(ConfigurationElementCollection), "AddItemName", ConfigurationElementCollection.AddItemNameDomainPropertyId, typeof(ConfigurationElementCollection.AddItemNamePropertyHandler)),
				new DomainMemberInfo(typeof(ConfigurationElementCollection), "RemoveItemName", ConfigurationElementCollection.RemoveItemNameDomainPropertyId, typeof(ConfigurationElementCollection.RemoveItemNamePropertyHandler)),
				new DomainMemberInfo(typeof(ConfigurationElementCollection), "ClearItemsName", ConfigurationElementCollection.ClearItemsNameDomainPropertyId, typeof(ConfigurationElementCollection.ClearItemsNamePropertyHandler)),
				new DomainMemberInfo(typeof(ConfigurationElementCollection), "UseHashForElementKey", ConfigurationElementCollection.UseHashForElementKeyDomainPropertyId, typeof(ConfigurationElementCollection.UseHashForElementKeyPropertyHandler)),
				new DomainMemberInfo(typeof(ConfigurationProperty), "Name", ConfigurationProperty.NameDomainPropertyId, typeof(ConfigurationProperty.NamePropertyHandler)),
				new DomainMemberInfo(typeof(ConfigurationProperty), "IsRequired", ConfigurationProperty.IsRequiredDomainPropertyId, typeof(ConfigurationProperty.IsRequiredPropertyHandler)),
				new DomainMemberInfo(typeof(ConfigurationProperty), "IsKey", ConfigurationProperty.IsKeyDomainPropertyId, typeof(ConfigurationProperty.IsKeyPropertyHandler)),
				new DomainMemberInfo(typeof(ConfigurationProperty), "IsDefaultCollection", ConfigurationProperty.IsDefaultCollectionDomainPropertyId, typeof(ConfigurationProperty.IsDefaultCollectionPropertyHandler)),
				new DomainMemberInfo(typeof(ConfigurationProperty), "XmlName", ConfigurationProperty.XmlNameDomainPropertyId, typeof(ConfigurationProperty.XmlNamePropertyHandler)),
				new DomainMemberInfo(typeof(ConfigurationProperty), "IsReadOnly", ConfigurationProperty.IsReadOnlyDomainPropertyId, typeof(ConfigurationProperty.IsReadOnlyPropertyHandler)),
				new DomainMemberInfo(typeof(ConfigurationProperty), "Documentation", ConfigurationProperty.DocumentationDomainPropertyId, typeof(ConfigurationProperty.DocumentationPropertyHandler)),
				new DomainMemberInfo(typeof(ConfigurationProperty), "CustomAttributes", ConfigurationProperty.CustomAttributesDomainPropertyId, typeof(ConfigurationProperty.CustomAttributesPropertyHandler)),
				new DomainMemberInfo(typeof(ConfigurationProperty), "Browsable", ConfigurationProperty.BrowsableDomainPropertyId, typeof(ConfigurationProperty.BrowsablePropertyHandler)),
				new DomainMemberInfo(typeof(ConfigurationProperty), "DisplayName", ConfigurationProperty.DisplayNameDomainPropertyId, typeof(ConfigurationProperty.DisplayNamePropertyHandler)),
				new DomainMemberInfo(typeof(ConfigurationProperty), "Category", ConfigurationProperty.CategoryDomainPropertyId, typeof(ConfigurationProperty.CategoryPropertyHandler)),
				new DomainMemberInfo(typeof(ConfigurationProperty), "TypeConverter", ConfigurationProperty.TypeConverterDomainPropertyId, typeof(ConfigurationProperty.TypeConverterPropertyHandler)),
				new DomainMemberInfo(typeof(EnumeratedType), "IsFlags", EnumeratedType.IsFlagsDomainPropertyId, typeof(EnumeratedType.IsFlagsPropertyHandler)),
				new DomainMemberInfo(typeof(EnumeratedType), "Documentation", EnumeratedType.DocumentationDomainPropertyId, typeof(EnumeratedType.DocumentationPropertyHandler)),
				new DomainMemberInfo(typeof(EnumeratedType), "CodeGenOptions", EnumeratedType.CodeGenOptionsDomainPropertyId, typeof(EnumeratedType.CodeGenOptionsPropertyHandler)),
				new DomainMemberInfo(typeof(EnumerationLiteral), "Name", EnumerationLiteral.NameDomainPropertyId, typeof(EnumerationLiteral.NamePropertyHandler)),
				new DomainMemberInfo(typeof(EnumerationLiteral), "Value", EnumerationLiteral.ValueDomainPropertyId, typeof(EnumerationLiteral.ValuePropertyHandler)),
				new DomainMemberInfo(typeof(EnumerationLiteral), "Documentation", EnumerationLiteral.DocumentationDomainPropertyId, typeof(EnumerationLiteral.DocumentationPropertyHandler)),
				new DomainMemberInfo(typeof(BaseConfigurationType), "TypeName", BaseConfigurationType.TypeNameDomainPropertyId, typeof(BaseConfigurationType.TypeNamePropertyHandler)),
				new DomainMemberInfo(typeof(BaseConfigurationType), "InheritanceModifier", BaseConfigurationType.InheritanceModifierDomainPropertyId, typeof(BaseConfigurationType.InheritanceModifierPropertyHandler)),
				new DomainMemberInfo(typeof(BaseConfigurationType), "AccessModifier", BaseConfigurationType.AccessModifierDomainPropertyId, typeof(BaseConfigurationType.AccessModifierPropertyHandler)),
				new DomainMemberInfo(typeof(ConfigurationSectionProperty), "ConfigurationSectionName", ConfigurationSectionProperty.ConfigurationSectionNameDomainPropertyId, typeof(ConfigurationSectionProperty.ConfigurationSectionNamePropertyHandler)),
				new DomainMemberInfo(typeof(ConfigurationSectionGroupProperty), "ConfigurationSectionGroupName", ConfigurationSectionGroupProperty.ConfigurationSectionGroupNameDomainPropertyId, typeof(ConfigurationSectionGroupProperty.ConfigurationSectionGroupNamePropertyHandler)),
				new DomainMemberInfo(typeof(PropertyValidator), "Name", PropertyValidator.NameDomainPropertyId, typeof(PropertyValidator.NamePropertyHandler)),
				new DomainMemberInfo(typeof(CallbackValidator), "Callback", CallbackValidator.CallbackDomainPropertyId, typeof(CallbackValidator.CallbackPropertyHandler)),
				new DomainMemberInfo(typeof(NumberValidator), "ExcludeRange", NumberValidator.ExcludeRangeDomainPropertyId, typeof(NumberValidator.ExcludeRangePropertyHandler)),
				new DomainMemberInfo(typeof(IntegerValidator), "MaxValue", IntegerValidator.MaxValueDomainPropertyId, typeof(IntegerValidator.MaxValuePropertyHandler)),
				new DomainMemberInfo(typeof(IntegerValidator), "MinValue", IntegerValidator.MinValueDomainPropertyId, typeof(IntegerValidator.MinValuePropertyHandler)),
				new DomainMemberInfo(typeof(LongValidator), "MaxValue", LongValidator.MaxValueDomainPropertyId, typeof(LongValidator.MaxValuePropertyHandler)),
				new DomainMemberInfo(typeof(LongValidator), "MinValue", LongValidator.MinValueDomainPropertyId, typeof(LongValidator.MinValuePropertyHandler)),
				new DomainMemberInfo(typeof(TimeSpanValidator), "MaxValue", TimeSpanValidator.MaxValueDomainPropertyId, typeof(TimeSpanValidator.MaxValuePropertyHandler)),
				new DomainMemberInfo(typeof(TimeSpanValidator), "MinValue", TimeSpanValidator.MinValueDomainPropertyId, typeof(TimeSpanValidator.MinValuePropertyHandler)),
				new DomainMemberInfo(typeof(RegexStringValidator), "RegularExpression", RegexStringValidator.RegularExpressionDomainPropertyId, typeof(RegexStringValidator.RegularExpressionPropertyHandler)),
				new DomainMemberInfo(typeof(StringValidator), "InvalidCharacters", StringValidator.InvalidCharactersDomainPropertyId, typeof(StringValidator.InvalidCharactersPropertyHandler)),
				new DomainMemberInfo(typeof(StringValidator), "MaxLength", StringValidator.MaxLengthDomainPropertyId, typeof(StringValidator.MaxLengthPropertyHandler)),
				new DomainMemberInfo(typeof(StringValidator), "MinLength", StringValidator.MinLengthDomainPropertyId, typeof(StringValidator.MinLengthPropertyHandler)),
				new DomainMemberInfo(typeof(CustomTypeConverter), "Name", CustomTypeConverter.NameDomainPropertyId, typeof(CustomTypeConverter.NamePropertyHandler)),
				new DomainMemberInfo(typeof(CustomTypeConverter), "Documentation", CustomTypeConverter.DocumentationDomainPropertyId, typeof(CustomTypeConverter.DocumentationPropertyHandler)),
				new DomainMemberInfo(typeof(TypeBase), "Name", TypeBase.NameDomainPropertyId, typeof(TypeBase.NamePropertyHandler)),
				new DomainMemberInfo(typeof(TypeBase), "Namespace", TypeBase.NamespaceDomainPropertyId, typeof(TypeBase.NamespacePropertyHandler)),
				new DomainMemberInfo(typeof(Attribute), "Name", Attribute.NameDomainPropertyId, typeof(Attribute.NamePropertyHandler)),
				new DomainMemberInfo(typeof(AttributeParameter), "Name", AttributeParameter.NameDomainPropertyId, typeof(AttributeParameter.NamePropertyHandler)),
				new DomainMemberInfo(typeof(AttributeParameter), "Value", AttributeParameter.ValueDomainPropertyId, typeof(AttributeParameter.ValuePropertyHandler)),
				new DomainMemberInfo(typeof(Comment), "Text", Comment.TextDomainPropertyId, typeof(Comment.TextPropertyHandler)),
				new DomainMemberInfo(typeof(ConfigurationShape), "OutlineDashStyle", ConfigurationShape.OutlineDashStyleDomainPropertyId, typeof(ConfigurationShape.OutlineDashStylePropertyHandler)),
				new DomainMemberInfo(typeof(ConfigurationShape), "OutlineThickness", ConfigurationShape.OutlineThicknessDomainPropertyId, typeof(ConfigurationShape.OutlineThicknessPropertyHandler)),
			};
		}
		/// <summary>
		/// Gets the list of generated domain roles.
		/// </summary>
		/// <returns>List of role data.</returns>
		protected sealed override DomainRolePlayerInfo[] GetGeneratedDomainRoles()
		{
			return new DomainRolePlayerInfo[]
			{
				new DomainRolePlayerInfo(typeof(ConfigurationElementHasAttributeProperties), "ConfigurationElement", ConfigurationElementHasAttributeProperties.ConfigurationElementDomainRoleId),
				new DomainRolePlayerInfo(typeof(ConfigurationElementHasAttributeProperties), "AttributeProperty", ConfigurationElementHasAttributeProperties.AttributePropertyDomainRoleId),
				new DomainRolePlayerInfo(typeof(ConfigurationElementCollectionHasItemType), "ConfigurationElementCollection", ConfigurationElementCollectionHasItemType.ConfigurationElementCollectionDomainRoleId),
				new DomainRolePlayerInfo(typeof(ConfigurationElementCollectionHasItemType), "ConfigurationElement", ConfigurationElementCollectionHasItemType.ConfigurationElementDomainRoleId),
				new DomainRolePlayerInfo(typeof(ConfigurationElementHasElementProperties), "ConfigurationElement", ConfigurationElementHasElementProperties.ConfigurationElementDomainRoleId),
				new DomainRolePlayerInfo(typeof(ConfigurationElementHasElementProperties), "ElementProperty", ConfigurationElementHasElementProperties.ElementPropertyDomainRoleId),
				new DomainRolePlayerInfo(typeof(ElementPropertyHasType), "ElementProperty", ElementPropertyHasType.ElementPropertyDomainRoleId),
				new DomainRolePlayerInfo(typeof(ElementPropertyHasType), "ConfigurationElement", ElementPropertyHasType.ConfigurationElementDomainRoleId),
				new DomainRolePlayerInfo(typeof(AttributePropertyHasPropertyType), "AttributeProperty", AttributePropertyHasPropertyType.AttributePropertyDomainRoleId),
				new DomainRolePlayerInfo(typeof(AttributePropertyHasPropertyType), "TypeDefinition", AttributePropertyHasPropertyType.TypeDefinitionDomainRoleId),
				new DomainRolePlayerInfo(typeof(ConfigurationSectionModelHasTypeDefinitions), "ConfigurationSectionModel", ConfigurationSectionModelHasTypeDefinitions.ConfigurationSectionModelDomainRoleId),
				new DomainRolePlayerInfo(typeof(ConfigurationSectionModelHasTypeDefinitions), "TypeDefinition", ConfigurationSectionModelHasTypeDefinitions.TypeDefinitionDomainRoleId),
				new DomainRolePlayerInfo(typeof(EnumeratedTypeHasLiterals), "EnumeratedType", EnumeratedTypeHasLiterals.EnumeratedTypeDomainRoleId),
				new DomainRolePlayerInfo(typeof(EnumeratedTypeHasLiterals), "EnumerationLiteral", EnumeratedTypeHasLiterals.EnumerationLiteralDomainRoleId),
				new DomainRolePlayerInfo(typeof(ConfigurationSectionModelHasConfigurationElements), "ConfigurationSectionModel", ConfigurationSectionModelHasConfigurationElements.ConfigurationSectionModelDomainRoleId),
				new DomainRolePlayerInfo(typeof(ConfigurationSectionModelHasConfigurationElements), "BaseConfigurationType", ConfigurationSectionModelHasConfigurationElements.BaseConfigurationTypeDomainRoleId),
				new DomainRolePlayerInfo(typeof(ConfigurationSectionGroupHasConfigurationSectionProperties), "ConfigurationSectionGroup", ConfigurationSectionGroupHasConfigurationSectionProperties.ConfigurationSectionGroupDomainRoleId),
				new DomainRolePlayerInfo(typeof(ConfigurationSectionGroupHasConfigurationSectionProperties), "ConfigurationSectionProperty", ConfigurationSectionGroupHasConfigurationSectionProperties.ConfigurationSectionPropertyDomainRoleId),
				new DomainRolePlayerInfo(typeof(ConfigurationSectionPropertyHasConfigurationSection), "ConfigurationSectionProperty", ConfigurationSectionPropertyHasConfigurationSection.ConfigurationSectionPropertyDomainRoleId),
				new DomainRolePlayerInfo(typeof(ConfigurationSectionPropertyHasConfigurationSection), "ConfigurationSection", ConfigurationSectionPropertyHasConfigurationSection.ConfigurationSectionDomainRoleId),
				new DomainRolePlayerInfo(typeof(ConfigurationSectionGroupHasConfigurationSectionGroupProperties), "ConfigurationSectionGroup", ConfigurationSectionGroupHasConfigurationSectionGroupProperties.ConfigurationSectionGroupDomainRoleId),
				new DomainRolePlayerInfo(typeof(ConfigurationSectionGroupHasConfigurationSectionGroupProperties), "ConfigurationSectionGroupProperty", ConfigurationSectionGroupHasConfigurationSectionGroupProperties.ConfigurationSectionGroupPropertyDomainRoleId),
				new DomainRolePlayerInfo(typeof(ConfigurationSectionGroupPropertyHasConfigurationSectionGroup), "ConfigurationSectionGroupProperty", ConfigurationSectionGroupPropertyHasConfigurationSectionGroup.ConfigurationSectionGroupPropertyDomainRoleId),
				new DomainRolePlayerInfo(typeof(ConfigurationSectionGroupPropertyHasConfigurationSectionGroup), "ConfigurationSectionGroup", ConfigurationSectionGroupPropertyHasConfigurationSectionGroup.ConfigurationSectionGroupDomainRoleId),
				new DomainRolePlayerInfo(typeof(ConfigurationSectionModelHasPropertyValidators), "ConfigurationSectionModel", ConfigurationSectionModelHasPropertyValidators.ConfigurationSectionModelDomainRoleId),
				new DomainRolePlayerInfo(typeof(ConfigurationSectionModelHasPropertyValidators), "PropertyValidators", ConfigurationSectionModelHasPropertyValidators.PropertyValidatorsDomainRoleId),
				new DomainRolePlayerInfo(typeof(PropertyValidatorsHasValidators), "PropertyValidators", PropertyValidatorsHasValidators.PropertyValidatorsDomainRoleId),
				new DomainRolePlayerInfo(typeof(PropertyValidatorsHasValidators), "PropertyValidator", PropertyValidatorsHasValidators.PropertyValidatorDomainRoleId),
				new DomainRolePlayerInfo(typeof(ConfigurationPropertyHasPropertyValidator), "ConfigurationProperty", ConfigurationPropertyHasPropertyValidator.ConfigurationPropertyDomainRoleId),
				new DomainRolePlayerInfo(typeof(ConfigurationPropertyHasPropertyValidator), "PropertyValidator", ConfigurationPropertyHasPropertyValidator.PropertyValidatorDomainRoleId),
				new DomainRolePlayerInfo(typeof(ConfigurationSectionModelHasCustomTypeConverters), "ConfigurationSectionModel", ConfigurationSectionModelHasCustomTypeConverters.ConfigurationSectionModelDomainRoleId),
				new DomainRolePlayerInfo(typeof(ConfigurationSectionModelHasCustomTypeConverters), "CustomTypeConverter", ConfigurationSectionModelHasCustomTypeConverters.CustomTypeConverterDomainRoleId),
				new DomainRolePlayerInfo(typeof(ConfigurationPropertyReferencesCustomTypeConverter), "ConfigurationProperty", ConfigurationPropertyReferencesCustomTypeConverter.ConfigurationPropertyDomainRoleId),
				new DomainRolePlayerInfo(typeof(ConfigurationPropertyReferencesCustomTypeConverter), "CustomTypeConverter", ConfigurationPropertyReferencesCustomTypeConverter.CustomTypeConverterDomainRoleId),
				new DomainRolePlayerInfo(typeof(CustomTypeConverterHasType), "CustomTypeConverter", CustomTypeConverterHasType.CustomTypeConverterDomainRoleId),
				new DomainRolePlayerInfo(typeof(CustomTypeConverterHasType), "TypeBase", CustomTypeConverterHasType.TypeBaseDomainRoleId),
				new DomainRolePlayerInfo(typeof(BaseConfigurationTypeHasBaseClass), "SourceBaseConfigurationType", BaseConfigurationTypeHasBaseClass.SourceBaseConfigurationTypeDomainRoleId),
				new DomainRolePlayerInfo(typeof(BaseConfigurationTypeHasBaseClass), "TargetBaseConfigurationType", BaseConfigurationTypeHasBaseClass.TargetBaseConfigurationTypeDomainRoleId),
				new DomainRolePlayerInfo(typeof(AttributeHasParameters), "Attribute", AttributeHasParameters.AttributeDomainRoleId),
				new DomainRolePlayerInfo(typeof(AttributeHasParameters), "AttributeParameter", AttributeHasParameters.AttributeParameterDomainRoleId),
				new DomainRolePlayerInfo(typeof(ConfigurationPropertyHasAttributes), "ConfigurationProperty", ConfigurationPropertyHasAttributes.ConfigurationPropertyDomainRoleId),
				new DomainRolePlayerInfo(typeof(ConfigurationPropertyHasAttributes), "Attribute", ConfigurationPropertyHasAttributes.AttributeDomainRoleId),
				new DomainRolePlayerInfo(typeof(ConfigurationSectionModelHasComments), "ConfigurationSectionModel", ConfigurationSectionModelHasComments.ConfigurationSectionModelDomainRoleId),
				new DomainRolePlayerInfo(typeof(ConfigurationSectionModelHasComments), "Comment", ConfigurationSectionModelHasComments.CommentDomainRoleId),
				new DomainRolePlayerInfo(typeof(CommentsReferenceConfigurationItems), "Comment", CommentsReferenceConfigurationItems.CommentDomainRoleId),
				new DomainRolePlayerInfo(typeof(CommentsReferenceConfigurationItems), "Subject", CommentsReferenceConfigurationItems.SubjectDomainRoleId),
			};
		}
		#endregion
		#region Factory methods
		private static global::System.Collections.Generic.Dictionary<global::System.Type, int> createElementMap;
	
		/// <summary>
		/// Creates an element of specified type.
		/// </summary>
		/// <param name="partition">Partition where element is to be created.</param>
		/// <param name="elementType">Element type which belongs to this domain model.</param>
		/// <param name="propertyAssignments">New element property assignments.</param>
		/// <returns>Created element.</returns>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1506:AvoidExcessiveClassCoupling", Justification = "Generated code.")]	
		public sealed override DslModeling::ModelElement CreateElement(DslModeling::Partition partition, global::System.Type elementType, DslModeling::PropertyAssignment[] propertyAssignments)
		{
			if (elementType == null) throw new global::System.ArgumentNullException("elementType");
	
			if (createElementMap == null)
			{
				createElementMap = new global::System.Collections.Generic.Dictionary<global::System.Type, int>(43);
				createElementMap.Add(typeof(ConfigurationSectionModel), 0);
				createElementMap.Add(typeof(ConfigurationElement), 1);
				createElementMap.Add(typeof(AttributeProperty), 2);
				createElementMap.Add(typeof(ConfigurationSection), 3);
				createElementMap.Add(typeof(ConfigurationElementCollection), 4);
				createElementMap.Add(typeof(ElementProperty), 5);
				createElementMap.Add(typeof(ExternalType), 6);
				createElementMap.Add(typeof(EnumeratedType), 7);
				createElementMap.Add(typeof(EnumerationLiteral), 8);
				createElementMap.Add(typeof(ConfigurationSectionGroup), 9);
				createElementMap.Add(typeof(ConfigurationSectionProperty), 10);
				createElementMap.Add(typeof(ConfigurationSectionGroupProperty), 11);
				createElementMap.Add(typeof(PropertyValidators), 12);
				createElementMap.Add(typeof(CallbackValidator), 13);
				createElementMap.Add(typeof(IntegerValidator), 14);
				createElementMap.Add(typeof(LongValidator), 15);
				createElementMap.Add(typeof(PositiveTimeSpanValidator), 16);
				createElementMap.Add(typeof(TimeSpanValidator), 17);
				createElementMap.Add(typeof(RegexStringValidator), 18);
				createElementMap.Add(typeof(StringValidator), 19);
				createElementMap.Add(typeof(CustomTypeConverter), 20);
				createElementMap.Add(typeof(Attribute), 21);
				createElementMap.Add(typeof(AttributeParameter), 22);
				createElementMap.Add(typeof(Comment), 23);
				createElementMap.Add(typeof(ConfigurationSectionDesignerDiagram), 24);
				createElementMap.Add(typeof(ConfigurationElementCollectionHasItemTypeConnector), 25);
				createElementMap.Add(typeof(ElementPropertyHasTypeConnector), 26);
				createElementMap.Add(typeof(ConfigurationSectionPropertyHasConfigurationSectionConnector), 27);
				createElementMap.Add(typeof(ConfigurationSectionGroupHasConfigurationSectionGroupPropertiesConnector), 28);
				createElementMap.Add(typeof(InheritanceConnector), 29);
				createElementMap.Add(typeof(CommentLink), 30);
				createElementMap.Add(typeof(CommentBoxShape), 31);
				createElementMap.Add(typeof(ConfigurationShape), 32);
				createElementMap.Add(typeof(ConfigurationSectionShape), 33);
				createElementMap.Add(typeof(ConfigurationElementCollectionShape), 34);
				createElementMap.Add(typeof(ConfigurationElementShape), 35);
				createElementMap.Add(typeof(ConfigurationSectionGroupShape), 36);
			}
			int index;
			if (!createElementMap.TryGetValue(elementType, out index))
			{
				// construct exception error message		
				string exceptionError = string.Format(
								global::System.Globalization.CultureInfo.CurrentCulture,
								global::ConfigurationSectionDesigner.ConfigurationSectionDesignerDomainModel.SingletonResourceManager.GetString("UnrecognizedElementType"),
								elementType.Name);
				throw new global::System.ArgumentException(exceptionError, "elementType");
			}
			switch (index)
			{
				// A constructor was not generated for ConfigurationSectionModel because it had HasCustomConstructor
				// set to true. Please provide the constructor below.
				case 0: return new ConfigurationSectionModel(partition, propertyAssignments);
				case 1: return new ConfigurationElement(partition, propertyAssignments);
				case 2: return new AttributeProperty(partition, propertyAssignments);
				case 3: return new ConfigurationSection(partition, propertyAssignments);
				case 4: return new ConfigurationElementCollection(partition, propertyAssignments);
				case 5: return new ElementProperty(partition, propertyAssignments);
				case 6: return new ExternalType(partition, propertyAssignments);
				case 7: return new EnumeratedType(partition, propertyAssignments);
				case 8: return new EnumerationLiteral(partition, propertyAssignments);
				case 9: return new ConfigurationSectionGroup(partition, propertyAssignments);
				case 10: return new ConfigurationSectionProperty(partition, propertyAssignments);
				case 11: return new ConfigurationSectionGroupProperty(partition, propertyAssignments);
				case 12: return new PropertyValidators(partition, propertyAssignments);
				case 13: return new CallbackValidator(partition, propertyAssignments);
				case 14: return new IntegerValidator(partition, propertyAssignments);
				case 15: return new LongValidator(partition, propertyAssignments);
				case 16: return new PositiveTimeSpanValidator(partition, propertyAssignments);
				case 17: return new TimeSpanValidator(partition, propertyAssignments);
				case 18: return new RegexStringValidator(partition, propertyAssignments);
				case 19: return new StringValidator(partition, propertyAssignments);
				case 20: return new CustomTypeConverter(partition, propertyAssignments);
				case 21: return new Attribute(partition, propertyAssignments);
				case 22: return new AttributeParameter(partition, propertyAssignments);
				case 23: return new Comment(partition, propertyAssignments);
				case 24: return new ConfigurationSectionDesignerDiagram(partition, propertyAssignments);
				case 25: return new ConfigurationElementCollectionHasItemTypeConnector(partition, propertyAssignments);
				case 26: return new ElementPropertyHasTypeConnector(partition, propertyAssignments);
				case 27: return new ConfigurationSectionPropertyHasConfigurationSectionConnector(partition, propertyAssignments);
				case 28: return new ConfigurationSectionGroupHasConfigurationSectionGroupPropertiesConnector(partition, propertyAssignments);
				case 29: return new InheritanceConnector(partition, propertyAssignments);
				case 30: return new CommentLink(partition, propertyAssignments);
				case 31: return new CommentBoxShape(partition, propertyAssignments);
				case 32: return new ConfigurationShape(partition, propertyAssignments);
				case 33: return new ConfigurationSectionShape(partition, propertyAssignments);
				case 34: return new ConfigurationElementCollectionShape(partition, propertyAssignments);
				case 35: return new ConfigurationElementShape(partition, propertyAssignments);
				case 36: return new ConfigurationSectionGroupShape(partition, propertyAssignments);
				default: return null;
			}
		}
	
		private static global::System.Collections.Generic.Dictionary<global::System.Type, int> createElementLinkMap;
	
		/// <summary>
		/// Creates an element link of specified type.
		/// </summary>
		/// <param name="partition">Partition where element is to be created.</param>
		/// <param name="elementLinkType">Element link type which belongs to this domain model.</param>
		/// <param name="roleAssignments">List of relationship role assignments for the new link.</param>
		/// <param name="propertyAssignments">New element property assignments.</param>
		/// <returns>Created element link.</returns>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")]
		public sealed override DslModeling::ElementLink CreateElementLink(DslModeling::Partition partition, global::System.Type elementLinkType, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
		{
			if (elementLinkType == null) throw new global::System.ArgumentNullException("elementLinkType");
			if (roleAssignments == null) throw new global::System.ArgumentNullException("roleAssignments");
	
			if (createElementLinkMap == null)
			{
				createElementLinkMap = new global::System.Collections.Generic.Dictionary<global::System.Type, int>(23);
				createElementLinkMap.Add(typeof(ConfigurationElementHasAttributeProperties), 0);
				createElementLinkMap.Add(typeof(ConfigurationElementCollectionHasItemType), 1);
				createElementLinkMap.Add(typeof(ConfigurationElementHasElementProperties), 2);
				createElementLinkMap.Add(typeof(ElementPropertyHasType), 3);
				createElementLinkMap.Add(typeof(AttributePropertyHasPropertyType), 4);
				createElementLinkMap.Add(typeof(ConfigurationSectionModelHasTypeDefinitions), 5);
				createElementLinkMap.Add(typeof(EnumeratedTypeHasLiterals), 6);
				createElementLinkMap.Add(typeof(ConfigurationSectionModelHasConfigurationElements), 7);
				createElementLinkMap.Add(typeof(ConfigurationSectionGroupHasConfigurationSectionProperties), 8);
				createElementLinkMap.Add(typeof(ConfigurationSectionPropertyHasConfigurationSection), 9);
				createElementLinkMap.Add(typeof(ConfigurationSectionGroupHasConfigurationSectionGroupProperties), 10);
				createElementLinkMap.Add(typeof(ConfigurationSectionGroupPropertyHasConfigurationSectionGroup), 11);
				createElementLinkMap.Add(typeof(ConfigurationSectionModelHasPropertyValidators), 12);
				createElementLinkMap.Add(typeof(PropertyValidatorsHasValidators), 13);
				createElementLinkMap.Add(typeof(ConfigurationPropertyHasPropertyValidator), 14);
				createElementLinkMap.Add(typeof(ConfigurationSectionModelHasCustomTypeConverters), 15);
				createElementLinkMap.Add(typeof(ConfigurationPropertyReferencesCustomTypeConverter), 16);
				createElementLinkMap.Add(typeof(CustomTypeConverterHasType), 17);
				createElementLinkMap.Add(typeof(BaseConfigurationTypeHasBaseClass), 18);
				createElementLinkMap.Add(typeof(AttributeHasParameters), 19);
				createElementLinkMap.Add(typeof(ConfigurationPropertyHasAttributes), 20);
				createElementLinkMap.Add(typeof(ConfigurationSectionModelHasComments), 21);
				createElementLinkMap.Add(typeof(CommentsReferenceConfigurationItems), 22);
			}
			int index;
			if (!createElementLinkMap.TryGetValue(elementLinkType, out index))
			{
				// construct exception error message
				string exceptionError = string.Format(
								global::System.Globalization.CultureInfo.CurrentCulture,
								global::ConfigurationSectionDesigner.ConfigurationSectionDesignerDomainModel.SingletonResourceManager.GetString("UnrecognizedElementLinkType"),
								elementLinkType.Name);
				throw new global::System.ArgumentException(exceptionError, "elementLinkType");
			
			}
			switch (index)
			{
				case 0: return new ConfigurationElementHasAttributeProperties(partition, roleAssignments, propertyAssignments);
				case 1: return new ConfigurationElementCollectionHasItemType(partition, roleAssignments, propertyAssignments);
				case 2: return new ConfigurationElementHasElementProperties(partition, roleAssignments, propertyAssignments);
				case 3: return new ElementPropertyHasType(partition, roleAssignments, propertyAssignments);
				case 4: return new AttributePropertyHasPropertyType(partition, roleAssignments, propertyAssignments);
				case 5: return new ConfigurationSectionModelHasTypeDefinitions(partition, roleAssignments, propertyAssignments);
				case 6: return new EnumeratedTypeHasLiterals(partition, roleAssignments, propertyAssignments);
				case 7: return new ConfigurationSectionModelHasConfigurationElements(partition, roleAssignments, propertyAssignments);
				case 8: return new ConfigurationSectionGroupHasConfigurationSectionProperties(partition, roleAssignments, propertyAssignments);
				case 9: return new ConfigurationSectionPropertyHasConfigurationSection(partition, roleAssignments, propertyAssignments);
				case 10: return new ConfigurationSectionGroupHasConfigurationSectionGroupProperties(partition, roleAssignments, propertyAssignments);
				case 11: return new ConfigurationSectionGroupPropertyHasConfigurationSectionGroup(partition, roleAssignments, propertyAssignments);
				case 12: return new ConfigurationSectionModelHasPropertyValidators(partition, roleAssignments, propertyAssignments);
				case 13: return new PropertyValidatorsHasValidators(partition, roleAssignments, propertyAssignments);
				case 14: return new ConfigurationPropertyHasPropertyValidator(partition, roleAssignments, propertyAssignments);
				case 15: return new ConfigurationSectionModelHasCustomTypeConverters(partition, roleAssignments, propertyAssignments);
				case 16: return new ConfigurationPropertyReferencesCustomTypeConverter(partition, roleAssignments, propertyAssignments);
				case 17: return new CustomTypeConverterHasType(partition, roleAssignments, propertyAssignments);
				case 18: return new BaseConfigurationTypeHasBaseClass(partition, roleAssignments, propertyAssignments);
				case 19: return new AttributeHasParameters(partition, roleAssignments, propertyAssignments);
				case 20: return new ConfigurationPropertyHasAttributes(partition, roleAssignments, propertyAssignments);
				case 21: return new ConfigurationSectionModelHasComments(partition, roleAssignments, propertyAssignments);
				case 22: return new CommentsReferenceConfigurationItems(partition, roleAssignments, propertyAssignments);
				default: return null;
			}
		}
		#endregion
		#region Resource manager
		
		private static global::System.Resources.ResourceManager resourceManager;
		
		/// <summary>
		/// The base name of this model's resources.
		/// </summary>
		public const string ResourceBaseName = "ConfigurationSectionDesigner.GeneratedCode.DomainModelResx";
		
		/// <summary>
		/// Gets the DomainModel's ResourceManager. If the ResourceManager does not already exist, then it is created.
		/// </summary>
		public override global::System.Resources.ResourceManager ResourceManager
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return ConfigurationSectionDesignerDomainModel.SingletonResourceManager;
			}
		}
	
		/// <summary>
		/// Gets the Singleton ResourceManager for this domain model.
		/// </summary>
		public static global::System.Resources.ResourceManager SingletonResourceManager
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				if (ConfigurationSectionDesignerDomainModel.resourceManager == null)
				{
					ConfigurationSectionDesignerDomainModel.resourceManager = new global::System.Resources.ResourceManager(ResourceBaseName, typeof(ConfigurationSectionDesignerDomainModel).Assembly);
				}
				return ConfigurationSectionDesignerDomainModel.resourceManager;
			}
		}
		#endregion
		#region Copy/Remove closures
		/// <summary>
		/// CopyClosure cache
		/// </summary>
		private static DslModeling::IElementVisitorFilter copyClosure;
		/// <summary>
		/// DeleteClosure cache
		/// </summary>
		private static DslModeling::IElementVisitorFilter removeClosure;
		/// <summary>
		/// Returns an IElementVisitorFilter that corresponds to the ClosureType.
		/// </summary>
		/// <param name="type">closure type</param>
		/// <param name="rootElements">collection of root elements</param>
		/// <returns>IElementVisitorFilter or null</returns>
		public override DslModeling::IElementVisitorFilter GetClosureFilter(DslModeling::ClosureType type, global::System.Collections.Generic.ICollection<DslModeling::ModelElement> rootElements)
		{
			switch (type)
			{
				case DslModeling::ClosureType.CopyClosure:
					return ConfigurationSectionDesignerDomainModel.CopyClosure;
				case DslModeling::ClosureType.DeleteClosure:
					return ConfigurationSectionDesignerDomainModel.DeleteClosure;
			}
			return base.GetClosureFilter(type, rootElements);
		}
		/// <summary>
		/// CopyClosure cache
		/// </summary>
		private static DslModeling::IElementVisitorFilter CopyClosure
		{
			get
			{
				// Incorporate all of the closures from the models we extend
				if (ConfigurationSectionDesignerDomainModel.copyClosure == null)
				{
					DslModeling::ChainingElementVisitorFilter copyFilter = new DslModeling::ChainingElementVisitorFilter();
					copyFilter.AddFilter(new ConfigurationSectionDesignerCopyClosure());
					copyFilter.AddFilter(new DslModeling::CoreCopyClosure());
					copyFilter.AddFilter(new DslDiagrams::CoreDesignSurfaceCopyClosure());
					
					ConfigurationSectionDesignerDomainModel.copyClosure = copyFilter;
				}
				return ConfigurationSectionDesignerDomainModel.copyClosure;
			}
		}
		/// <summary>
		/// DeleteClosure cache
		/// </summary>
		private static DslModeling::IElementVisitorFilter DeleteClosure
		{
			get
			{
				// Incorporate all of the closures from the models we extend
				if (ConfigurationSectionDesignerDomainModel.removeClosure == null)
				{
					DslModeling::ChainingElementVisitorFilter removeFilter = new DslModeling::ChainingElementVisitorFilter();
					removeFilter.AddFilter(new ConfigurationSectionDesignerDeleteClosure());
					removeFilter.AddFilter(new DslModeling::CoreDeleteClosure());
					removeFilter.AddFilter(new DslDiagrams::CoreDesignSurfaceDeleteClosure());
		
					ConfigurationSectionDesignerDomainModel.removeClosure = removeFilter;
				}
				return ConfigurationSectionDesignerDomainModel.removeClosure;
			}
		}
		#endregion
		#region Diagram rule helpers
		/// <summary>
		/// Enables rules in this domain model related to diagram fixup for the given store.
		/// If diagram data will be loaded into the store, this method should be called first to ensure
		/// that the diagram behaves properly.
		/// </summary>
		public static void EnableDiagramRules(DslModeling::Store store)
		{
			if(store == null) throw new global::System.ArgumentNullException("store");
			
			DslModeling::RuleManager ruleManager = store.RuleManager;
			ruleManager.EnableRule(typeof(global::ConfigurationSectionDesigner.FixUpDiagram));
			ruleManager.EnableRule(typeof(global::ConfigurationSectionDesigner.DecoratorPropertyChanged));
			ruleManager.EnableRule(typeof(global::ConfigurationSectionDesigner.ConnectorRolePlayerChanged));
			ruleManager.EnableRule(typeof(global::ConfigurationSectionDesigner.CompartmentItemAddRule));
			ruleManager.EnableRule(typeof(global::ConfigurationSectionDesigner.CompartmentItemDeleteRule));
			ruleManager.EnableRule(typeof(global::ConfigurationSectionDesigner.CompartmentItemRolePlayerChangeRule));
			ruleManager.EnableRule(typeof(global::ConfigurationSectionDesigner.CompartmentItemRolePlayerPositionChangeRule));
			ruleManager.EnableRule(typeof(global::ConfigurationSectionDesigner.CompartmentItemChangeRule));
		}
		
		/// <summary>
		/// Disables rules in this domain model related to diagram fixup for the given store.
		/// </summary>
		public static void DisableDiagramRules(DslModeling::Store store)
		{
			if(store == null) throw new global::System.ArgumentNullException("store");
			
			DslModeling::RuleManager ruleManager = store.RuleManager;
			ruleManager.DisableRule(typeof(global::ConfigurationSectionDesigner.FixUpDiagram));
			ruleManager.DisableRule(typeof(global::ConfigurationSectionDesigner.DecoratorPropertyChanged));
			ruleManager.DisableRule(typeof(global::ConfigurationSectionDesigner.ConnectorRolePlayerChanged));
			ruleManager.DisableRule(typeof(global::ConfigurationSectionDesigner.CompartmentItemAddRule));
			ruleManager.DisableRule(typeof(global::ConfigurationSectionDesigner.CompartmentItemDeleteRule));
			ruleManager.DisableRule(typeof(global::ConfigurationSectionDesigner.CompartmentItemRolePlayerChangeRule));
			ruleManager.DisableRule(typeof(global::ConfigurationSectionDesigner.CompartmentItemRolePlayerPositionChangeRule));
			ruleManager.DisableRule(typeof(global::ConfigurationSectionDesigner.CompartmentItemChangeRule));
		}
		#endregion
	}
		
	#region Copy/Remove closure classes
	/// <summary>
	/// Remove closure visitor filter
	/// </summary>
	[global::System.CLSCompliant(true)]
	public partial class ConfigurationSectionDesignerDeleteClosure : ConfigurationSectionDesignerDeleteClosureBase, DslModeling::IElementVisitorFilter
	{
		/// <summary>
		/// Constructor
		/// </summary>
		public ConfigurationSectionDesignerDeleteClosure() : base()
		{
		}
	}
	
	/// <summary>
	/// Base class for remove closure visitor filter
	/// </summary>
	[global::System.CLSCompliant(true)]
	public partial class ConfigurationSectionDesignerDeleteClosureBase : DslModeling::IElementVisitorFilter
	{
		/// <summary>
		/// DomainRoles
		/// </summary>
		private global::System.Collections.Specialized.HybridDictionary domainRoles;
		/// <summary>
		/// Constructor
		/// </summary>
		public ConfigurationSectionDesignerDeleteClosureBase()
		{
			#region Initialize DomainData Table
			DomainRoles.Add(global::ConfigurationSectionDesigner.ConfigurationElementHasAttributeProperties.AttributePropertyDomainRoleId, true);
			DomainRoles.Add(global::ConfigurationSectionDesigner.ConfigurationElementHasElementProperties.ElementPropertyDomainRoleId, true);
			DomainRoles.Add(global::ConfigurationSectionDesigner.ConfigurationSectionModelHasTypeDefinitions.TypeDefinitionDomainRoleId, true);
			DomainRoles.Add(global::ConfigurationSectionDesigner.EnumeratedTypeHasLiterals.EnumerationLiteralDomainRoleId, true);
			DomainRoles.Add(global::ConfigurationSectionDesigner.ConfigurationSectionModelHasConfigurationElements.BaseConfigurationTypeDomainRoleId, true);
			DomainRoles.Add(global::ConfigurationSectionDesigner.ConfigurationSectionGroupHasConfigurationSectionProperties.ConfigurationSectionPropertyDomainRoleId, true);
			DomainRoles.Add(global::ConfigurationSectionDesigner.ConfigurationSectionGroupHasConfigurationSectionGroupProperties.ConfigurationSectionGroupPropertyDomainRoleId, true);
			DomainRoles.Add(global::ConfigurationSectionDesigner.ConfigurationSectionModelHasPropertyValidators.PropertyValidatorsDomainRoleId, true);
			DomainRoles.Add(global::ConfigurationSectionDesigner.PropertyValidatorsHasValidators.PropertyValidatorDomainRoleId, true);
			DomainRoles.Add(global::ConfigurationSectionDesigner.ConfigurationSectionModelHasCustomTypeConverters.CustomTypeConverterDomainRoleId, true);
			DomainRoles.Add(global::ConfigurationSectionDesigner.AttributeHasParameters.AttributeParameterDomainRoleId, true);
			DomainRoles.Add(global::ConfigurationSectionDesigner.ConfigurationPropertyHasAttributes.AttributeDomainRoleId, true);
			DomainRoles.Add(global::ConfigurationSectionDesigner.ConfigurationSectionModelHasComments.CommentDomainRoleId, true);
			#endregion
		}
		/// <summary>
		/// Called to ask the filter if a particular relationship from a source element should be included in the traversal
		/// </summary>
		/// <param name="walker">ElementWalker that is traversing the model</param>
		/// <param name="sourceElement">Model Element playing the source role</param>
		/// <param name="sourceRoleInfo">DomainRoleInfo of the role that the source element is playing in the relationship</param>
		/// <param name="domainRelationshipInfo">DomainRelationshipInfo for the ElementLink in question</param>
		/// <param name="targetRelationship">Relationship in question</param>
		/// <returns>Yes if the relationship should be traversed</returns>
		public virtual DslModeling::VisitorFilterResult ShouldVisitRelationship(DslModeling::ElementWalker walker, DslModeling::ModelElement sourceElement, DslModeling::DomainRoleInfo sourceRoleInfo, DslModeling::DomainRelationshipInfo domainRelationshipInfo, DslModeling::ElementLink targetRelationship)
		{
			return DslModeling::VisitorFilterResult.Yes;
		}
		/// <summary>
		/// Called to ask the filter if a particular role player should be Visited during traversal
		/// </summary>
		/// <param name="walker">ElementWalker that is traversing the model</param>
		/// <param name="sourceElement">Model Element playing the source role</param>
		/// <param name="elementLink">Element Link that forms the relationship to the role player in question</param>
		/// <param name="targetDomainRole">DomainRoleInfo of the target role</param>
		/// <param name="targetRolePlayer">Model Element that plays the target role in the relationship</param>
		/// <returns></returns>
		public virtual DslModeling::VisitorFilterResult ShouldVisitRolePlayer(DslModeling::ElementWalker walker, DslModeling::ModelElement sourceElement, DslModeling::ElementLink elementLink, DslModeling::DomainRoleInfo targetDomainRole, DslModeling::ModelElement targetRolePlayer)
		{
			if (targetDomainRole == null) throw new global::System.ArgumentNullException("targetDomainRole");
			return this.DomainRoles.Contains(targetDomainRole.Id) ? DslModeling::VisitorFilterResult.Yes : DslModeling::VisitorFilterResult.DoNotCare;
		}
		/// <summary>
		/// DomainRoles
		/// </summary>
		private global::System.Collections.Specialized.HybridDictionary DomainRoles
		{
			get
			{
				if (this.domainRoles == null)
				{
					this.domainRoles = new global::System.Collections.Specialized.HybridDictionary();
				}
				return this.domainRoles;
			}
		}
	
	}
	/// <summary>
	/// Copy closure visitor filter
	/// </summary>
	[global::System.CLSCompliant(true)]
	public partial class ConfigurationSectionDesignerCopyClosure : ConfigurationSectionDesignerCopyClosureBase, DslModeling::IElementVisitorFilter
	{
		/// <summary>
		/// Constructor
		/// </summary>
		public ConfigurationSectionDesignerCopyClosure() : base()
		{
		}
	}
	/// <summary>
	/// Base class for copy closure visitor filter
	/// </summary>
	[global::System.CLSCompliant(true)]
	public partial class ConfigurationSectionDesignerCopyClosureBase : DslModeling::CopyClosureFilter, DslModeling::IElementVisitorFilter
	{
		/// <summary>
		/// Constructor
		/// </summary>
		public ConfigurationSectionDesignerCopyClosureBase():base()
		{
		}
	}
	#endregion
		
}
namespace ConfigurationSectionDesigner
{
	/// <summary>
	/// DomainEnumeration: ConfigurationSectionCodeGenOptions
	/// The possible blocks of code that are generated for a Configuration Section.
	/// </summary>
	[global::System.CLSCompliant(true)]
	[global::System.Flags]
	public enum ConfigurationSectionCodeGenOptions
	{
		/// <summary>
		/// Singleton
		/// Generates a static singleton instance for easy access to the Configuration
		/// Section.
		/// </summary>
		[DslDesign::DescriptionResource("ConfigurationSectionDesigner.ConfigurationSectionCodeGenOptions/Singleton.Description", typeof(global::ConfigurationSectionDesigner.ConfigurationSectionDesignerDomainModel), "ConfigurationSectionDesigner.GeneratedCode.DomainModelResx")]
		Singleton = 1,
		/// <summary>
		/// None
		/// No additional code is generated.
		/// </summary>
		[DslDesign::DescriptionResource("ConfigurationSectionDesigner.ConfigurationSectionCodeGenOptions/None.Description", typeof(global::ConfigurationSectionDesigner.ConfigurationSectionDesignerDomainModel), "ConfigurationSectionDesigner.GeneratedCode.DomainModelResx")]
		None = 0,
		/// <summary>
		/// XmlnsProperty
		/// Generates a property that represents the XML namespace (xmlns).
		/// </summary>
		[DslDesign::DescriptionResource("ConfigurationSectionDesigner.ConfigurationSectionCodeGenOptions/XmlnsProperty.Description", typeof(global::ConfigurationSectionDesigner.ConfigurationSectionDesignerDomainModel), "ConfigurationSectionDesigner.GeneratedCode.DomainModelResx")]
		XmlnsProperty = 2,
		/// <summary>
		/// Protection
		/// Generates code for easy access to the configuration section protection
		/// mechanisms
		/// </summary>
		[DslDesign::DescriptionResource("ConfigurationSectionDesigner.ConfigurationSectionCodeGenOptions/Protection.Description", typeof(global::ConfigurationSectionDesigner.ConfigurationSectionDesignerDomainModel), "ConfigurationSectionDesigner.GeneratedCode.DomainModelResx")]
		Protection = 4,
	}
}
namespace ConfigurationSectionDesigner
{
	/// <summary>
	/// DomainEnumeration: ConfigurationElementCollectionCodeGenOptions
	/// The possible blocks of code that are generated for a Configuration Element
	/// Collection.
	/// </summary>
	[global::System.CLSCompliant(true)]
	[global::System.Flags]
	public enum ConfigurationElementCollectionCodeGenOptions
	{
		/// <summary>
		/// Indexer
		/// Generates an indexer for the elements in the collection.
		/// </summary>
		[DslDesign::DescriptionResource("ConfigurationSectionDesigner.ConfigurationElementCollectionCodeGenOptions/Indexer.Description", typeof(global::ConfigurationSectionDesigner.ConfigurationSectionDesignerDomainModel), "ConfigurationSectionDesigner.GeneratedCode.DomainModelResx")]
		Indexer = 1,
		/// <summary>
		/// AddMethod
		/// Generates an "Add" method to add items to the collection.
		/// </summary>
		[DslDesign::DescriptionResource("ConfigurationSectionDesigner.ConfigurationElementCollectionCodeGenOptions/AddMethod.Description", typeof(global::ConfigurationSectionDesigner.ConfigurationSectionDesignerDomainModel), "ConfigurationSectionDesigner.GeneratedCode.DomainModelResx")]
		AddMethod = 2,
		/// <summary>
		/// None
		/// No additional code is generated.
		/// </summary>
		[DslDesign::DescriptionResource("ConfigurationSectionDesigner.ConfigurationElementCollectionCodeGenOptions/None.Description", typeof(global::ConfigurationSectionDesigner.ConfigurationSectionDesignerDomainModel), "ConfigurationSectionDesigner.GeneratedCode.DomainModelResx")]
		None = 0,
		/// <summary>
		/// RemoveMethod
		/// Generates a "Remove" method to add items to the collection.
		/// </summary>
		[DslDesign::DescriptionResource("ConfigurationSectionDesigner.ConfigurationElementCollectionCodeGenOptions/RemoveMethod.Description", typeof(global::ConfigurationSectionDesigner.ConfigurationSectionDesignerDomainModel), "ConfigurationSectionDesigner.GeneratedCode.DomainModelResx")]
		RemoveMethod = 4,
		/// <summary>
		/// GetItemMethods
		/// Generates "GetItem" methods to retrieve items from the collection by key and id.
		/// </summary>
		[DslDesign::DescriptionResource("ConfigurationSectionDesigner.ConfigurationElementCollectionCodeGenOptions/GetItemMethods.Description", typeof(global::ConfigurationSectionDesigner.ConfigurationSectionDesignerDomainModel), "ConfigurationSectionDesigner.GeneratedCode.DomainModelResx")]
		GetItemMethods = 8,
		/// <summary>
		/// ICollection
		/// Generates ICollection<T> implementation for the collection
		/// </summary>
		[DslDesign::DescriptionResource("ConfigurationSectionDesigner.ConfigurationElementCollectionCodeGenOptions/ICollection.Description", typeof(global::ConfigurationSectionDesigner.ConfigurationSectionDesignerDomainModel), "ConfigurationSectionDesigner.GeneratedCode.DomainModelResx")]
		ICollection = 16,
	}
}
namespace ConfigurationSectionDesigner
{
	/// <summary>
	/// DomainEnumeration: TypeDefinitionCodeGenOptions
	/// The options for code that is generated for a Type Definition.
	/// </summary>
	[global::System.CLSCompliant(true)]
	[global::System.Flags]
	public enum TypeDefinitionCodeGenOptions
	{
		/// <summary>
		/// None
		/// No code is generated.
		/// </summary>
		[DslDesign::DescriptionResource("ConfigurationSectionDesigner.TypeDefinitionCodeGenOptions/None.Description", typeof(global::ConfigurationSectionDesigner.ConfigurationSectionDesignerDomainModel), "ConfigurationSectionDesigner.GeneratedCode.DomainModelResx")]
		None = 0,
		/// <summary>
		/// TypeDefinition
		/// Generates the type definition in code.
		/// </summary>
		[DslDesign::DescriptionResource("ConfigurationSectionDesigner.TypeDefinitionCodeGenOptions/TypeDefinition.Description", typeof(global::ConfigurationSectionDesigner.ConfigurationSectionDesignerDomainModel), "ConfigurationSectionDesigner.GeneratedCode.DomainModelResx")]
		TypeDefinition = 1,
	}
}
namespace ConfigurationSectionDesigner
{
	/// <summary>
	/// DomainEnumeration: CustomEditors
	/// Description for ConfigurationSectionDesigner.CustomEditors
	/// </summary>
	[global::System.CLSCompliant(true)]
	public enum CustomEditors
	{
		/// <summary>
		/// None
		/// Do not use a custom editor
		/// </summary>
		[DslDesign::DescriptionResource("ConfigurationSectionDesigner.CustomEditors/None.Description", typeof(global::ConfigurationSectionDesigner.ConfigurationSectionDesignerDomainModel), "ConfigurationSectionDesigner.GeneratedCode.DomainModelResx")]
		None = 0,
		/// <summary>
		/// FileNameEditor
		/// Provides a user interface for choosing a file from the file system
		/// </summary>
		[DslDesign::DescriptionResource("ConfigurationSectionDesigner.CustomEditors/FileNameEditor.Description", typeof(global::ConfigurationSectionDesigner.ConfigurationSectionDesignerDomainModel), "ConfigurationSectionDesigner.GeneratedCode.DomainModelResx")]
		FileNameEditor = 1,
		/// <summary>
		/// FolderNameEditor
		/// Provides a user interface for choosing a folder from the file system
		/// </summary>
		[DslDesign::DescriptionResource("ConfigurationSectionDesigner.CustomEditors/FolderNameEditor.Description", typeof(global::ConfigurationSectionDesigner.ConfigurationSectionDesignerDomainModel), "ConfigurationSectionDesigner.GeneratedCode.DomainModelResx")]
		FolderNameEditor = 2,
	}
}
namespace ConfigurationSectionDesigner
{
	/// <summary>
	/// DomainEnumeration: ProtectionProviders
	/// Description for ConfigurationSectionDesigner.ProtectionProviders
	/// </summary>
	[global::System.CLSCompliant(true)]
	public enum ProtectionProviders
	{
		/// <summary>
		/// DataProtectionConfigurationProvider
		/// This provider uses DPAPI to encrypt and decrypt data
		/// </summary>
		[DslDesign::DescriptionResource("ConfigurationSectionDesigner.ProtectionProviders/DataProtectionConfigurationProvider.Description", typeof(global::ConfigurationSectionDesigner.ConfigurationSectionDesignerDomainModel), "ConfigurationSectionDesigner.GeneratedCode.DomainModelResx")]
		DataProtectionConfigurationProvider,
		/// <summary>
		/// RSAProtectedConfigurationProvider
		/// This provider uses the RSA public key encryption to encrypt and decrypt data
		/// </summary>
		[DslDesign::DescriptionResource("ConfigurationSectionDesigner.ProtectionProviders/RSAProtectedConfigurationProvider.Description", typeof(global::ConfigurationSectionDesigner.ConfigurationSectionDesignerDomainModel), "ConfigurationSectionDesigner.GeneratedCode.DomainModelResx")]
		RSAProtectedConfigurationProvider,
		/// <summary>
		/// Custom
		/// Use a custom ProtectedConfigurationProvider
		/// </summary>
		[DslDesign::DescriptionResource("ConfigurationSectionDesigner.ProtectionProviders/Custom.Description", typeof(global::ConfigurationSectionDesigner.ConfigurationSectionDesignerDomainModel), "ConfigurationSectionDesigner.GeneratedCode.DomainModelResx")]
		Custom,
	}
}
namespace ConfigurationSectionDesigner
{
	/// <summary>
	/// DomainEnumeration: TypeConverters
	/// Description for ConfigurationSectionDesigner.TypeConverters
	/// </summary>
	[global::System.CLSCompliant(true)]
	public enum TypeConverters
	{
		/// <summary>
		/// CommaDelimitedStringCollectionConverter
		/// Converts a comma-delimited value to/from a CommaDelimitedStringCollection
		/// </summary>
		[DslDesign::DescriptionResource("ConfigurationSectionDesigner.TypeConverters/CommaDelimitedStringCollectionConverter.Description", typeof(global::ConfigurationSectionDesigner.ConfigurationSectionDesignerDomainModel), "ConfigurationSectionDesigner.GeneratedCode.DomainModelResx")]
		CommaDelimitedStringCollectionConverter,
		/// <summary>
		/// GenericEnumConverter
		/// Converts between a string and an enumerated type
		/// </summary>
		[DslDesign::DescriptionResource("ConfigurationSectionDesigner.TypeConverters/GenericEnumConverter.Description", typeof(global::ConfigurationSectionDesigner.ConfigurationSectionDesignerDomainModel), "ConfigurationSectionDesigner.GeneratedCode.DomainModelResx")]
		GenericEnumConverter,
		/// <summary>
		/// InfiniteIntConverter
		/// Converts between a string and the standard infinite or integer value
		/// </summary>
		[DslDesign::DescriptionResource("ConfigurationSectionDesigner.TypeConverters/InfiniteIntConverter.Description", typeof(global::ConfigurationSectionDesigner.ConfigurationSectionDesignerDomainModel), "ConfigurationSectionDesigner.GeneratedCode.DomainModelResx")]
		InfiniteIntConverter,
		/// <summary>
		/// InfiniteTimeSpanConverter
		/// Converts between a string and the standard infinite TimeSpan value
		/// </summary>
		[DslDesign::DescriptionResource("ConfigurationSectionDesigner.TypeConverters/InfiniteTimeSpanConverter.Description", typeof(global::ConfigurationSectionDesigner.ConfigurationSectionDesignerDomainModel), "ConfigurationSectionDesigner.GeneratedCode.DomainModelResx")]
		InfiniteTimeSpanConverter,
		/// <summary>
		/// None
		/// No type conversion will be done
		/// </summary>
		[DslDesign::DescriptionResource("ConfigurationSectionDesigner.TypeConverters/None.Description", typeof(global::ConfigurationSectionDesigner.ConfigurationSectionDesignerDomainModel), "ConfigurationSectionDesigner.GeneratedCode.DomainModelResx")]
		None,
		/// <summary>
		/// TimeSpanMinutesConverter
		/// Converts to and from a time span expressed in minutes
		/// </summary>
		[DslDesign::DescriptionResource("ConfigurationSectionDesigner.TypeConverters/TimeSpanMinutesConverter.Description", typeof(global::ConfigurationSectionDesigner.ConfigurationSectionDesignerDomainModel), "ConfigurationSectionDesigner.GeneratedCode.DomainModelResx")]
		TimeSpanMinutesConverter,
		/// <summary>
		/// TimeSpanMinutesOrInfiniteConverter
		/// Converts to and from a time span expressed in minutes, or infinite
		/// </summary>
		[DslDesign::DescriptionResource("ConfigurationSectionDesigner.TypeConverters/TimeSpanMinutesOrInfiniteConverter.Description", typeof(global::ConfigurationSectionDesigner.ConfigurationSectionDesignerDomainModel), "ConfigurationSectionDesigner.GeneratedCode.DomainModelResx")]
		TimeSpanMinutesOrInfiniteConverter,
		/// <summary>
		/// TimeSpanSecondsConverter
		/// Converts to and from a time span expressed in seconds
		/// </summary>
		[DslDesign::DescriptionResource("ConfigurationSectionDesigner.TypeConverters/TimeSpanSecondsConverter.Description", typeof(global::ConfigurationSectionDesigner.ConfigurationSectionDesignerDomainModel), "ConfigurationSectionDesigner.GeneratedCode.DomainModelResx")]
		TimeSpanSecondsConverter,
		/// <summary>
		/// TimeSpanSecondsOrInfiniteConverter
		/// Converts to and from a time span expressed in seconds, or infinite
		/// </summary>
		[DslDesign::DescriptionResource("ConfigurationSectionDesigner.TypeConverters/TimeSpanSecondsOrInfiniteConverter.Description", typeof(global::ConfigurationSectionDesigner.ConfigurationSectionDesignerDomainModel), "ConfigurationSectionDesigner.GeneratedCode.DomainModelResx")]
		TimeSpanSecondsOrInfiniteConverter,
		/// <summary>
		/// TypeNameConverter
		/// Converts between a Type object and the string representation of that type
		/// </summary>
		[DslDesign::DescriptionResource("ConfigurationSectionDesigner.TypeConverters/TypeNameConverter.Description", typeof(global::ConfigurationSectionDesigner.ConfigurationSectionDesignerDomainModel), "ConfigurationSectionDesigner.GeneratedCode.DomainModelResx")]
		TypeNameConverter,
		/// <summary>
		/// WhiteSpaceTrimStringConverter
		/// Converts a string to its canonical format (white space trimmed from front and
		/// back)
		/// </summary>
		[DslDesign::DescriptionResource("ConfigurationSectionDesigner.TypeConverters/WhiteSpaceTrimStringConverter.Description", typeof(global::ConfigurationSectionDesigner.ConfigurationSectionDesignerDomainModel), "ConfigurationSectionDesigner.GeneratedCode.DomainModelResx")]
		WhiteSpaceTrimStringConverter,
		/// <summary>
		/// Custom
		/// Use a custom type converter
		/// </summary>
		[DslDesign::DescriptionResource("ConfigurationSectionDesigner.TypeConverters/Custom.Description", typeof(global::ConfigurationSectionDesigner.ConfigurationSectionDesignerDomainModel), "ConfigurationSectionDesigner.GeneratedCode.DomainModelResx")]
		Custom,
	}
}
namespace ConfigurationSectionDesigner
{
	/// <summary>
	/// DomainEnumeration: InheritanceModifiers
	/// Description for ConfigurationSectionDesigner.InheritanceModifiers
	/// </summary>
	[System.ComponentModel.TypeConverter(typeof(InheritanceModifierConverter))]
	[global::System.CLSCompliant(true)]
	public enum InheritanceModifiers
	{
		/// <summary>
		/// None
		/// Description for ConfigurationSectionDesigner.InheritanceModifiers.None
		/// </summary>
		[DslDesign::DescriptionResource("ConfigurationSectionDesigner.InheritanceModifiers/None.Description", typeof(global::ConfigurationSectionDesigner.ConfigurationSectionDesignerDomainModel), "ConfigurationSectionDesigner.GeneratedCode.DomainModelResx")]
		None = 0,
		/// <summary>
		/// Abstract
		/// Description for ConfigurationSectionDesigner.InheritanceModifiers.Abstract
		/// </summary>
		[DslDesign::DescriptionResource("ConfigurationSectionDesigner.InheritanceModifiers/Abstract.Description", typeof(global::ConfigurationSectionDesigner.ConfigurationSectionDesignerDomainModel), "ConfigurationSectionDesigner.GeneratedCode.DomainModelResx")]
		Abstract = 1,
		/// <summary>
		/// Sealed
		/// Description for ConfigurationSectionDesigner.InheritanceModifiers.Sealed
		/// </summary>
		[DslDesign::DescriptionResource("ConfigurationSectionDesigner.InheritanceModifiers/Sealed.Description", typeof(global::ConfigurationSectionDesigner.ConfigurationSectionDesignerDomainModel), "ConfigurationSectionDesigner.GeneratedCode.DomainModelResx")]
		Sealed = 2,
	}
}
namespace ConfigurationSectionDesigner
{
	/// <summary>
	/// DomainEnumeration: AccessModifiers
	/// Description for ConfigurationSectionDesigner.AccessModifiers
	/// </summary>
	[System.ComponentModel.TypeConverter(typeof(AccessModifierConverter))]
	[global::System.CLSCompliant(true)]
	public enum AccessModifiers
	{
		/// <summary>
		/// Internal
		/// Description for ConfigurationSectionDesigner.AccessModifiers.Internal
		/// </summary>
		[DslDesign::DescriptionResource("ConfigurationSectionDesigner.AccessModifiers/Internal.Description", typeof(global::ConfigurationSectionDesigner.ConfigurationSectionDesignerDomainModel), "ConfigurationSectionDesigner.GeneratedCode.DomainModelResx")]
		Internal = 0,
		/// <summary>
		/// Public
		/// Description for ConfigurationSectionDesigner.AccessModifiers.Public
		/// </summary>
		[DslDesign::DescriptionResource("ConfigurationSectionDesigner.AccessModifiers/Public.Description", typeof(global::ConfigurationSectionDesigner.ConfigurationSectionDesignerDomainModel), "ConfigurationSectionDesigner.GeneratedCode.DomainModelResx")]
		Public = 1,
	}
}

